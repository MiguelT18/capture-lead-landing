---
import "../styles/global.css";

import ToTopButton from "@components/ToTopButton.tsx";
import Notification from "@/components/Notification.astro";
import { GlobalIcons } from "@assets/icons.js";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>Comunidad de Telegram</title>
  </head>
  <body>
    <Notification />
    <slot />
    <ToTopButton client:only="react">
      <GlobalIcons.arrowUp />
    </ToTopButton>
  </body>
</html>

<script>
  window.addEventListener("show-notification", (event) => {
    const { type, message } = (event as CustomEvent).detail;
    const notification = document.getElementById("notification") as HTMLElement;
    if (!notification) return;

    const notificationTypes = {
      success: "bg-green-100 text-green-800",
      error: "bg-red-100 text-red-800",
      info: "bg-blue-100 text-blue-800",
      warning: "bg-yellow-100 text-yellow-800",
    };

    const spanElement = notification.querySelector("span");
    if (spanElement) {
      spanElement.innerHTML = message;
    }
    notification.className = `"transition-opacity duration-100 fixed bottom-5 right-5 z-50 p-4 text-sm rounded-lg shadow-md pointer-events-none opacity-0 ${notificationTypes[type as keyof typeof notificationTypes]}`;

    void notification.offsetWidth; // trigger reflow

    notification.classList.remove("opacity-0");
    notification.classList.add("opacity-100");

    setTimeout(() => {
      notification.classList.remove("opacity-100");
      notification.classList.add("opacity-0");
    }, 3000);
  });
</script>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }

  body,
  *,
  *::before,
  *::after {
    padding: 0;
    box-sizing: border-box;
  }
</style>
